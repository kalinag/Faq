{"version":3,"sources":["Faq.jsx","questions.jsx","App.js","reportWebVitals.js","index.js"],"names":["Faq","faq","idx","toggle","className","open","onClick","question","answer","Questions","useState","id","data","setData","toggleOpen","updatedFaqs","map","i","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAYeA,EAVH,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,IAAKC,EAAiB,EAAjBA,IAAKC,EAAY,EAAZA,OACpB,OACI,0BAASC,UAAWH,EAAII,KAAK,eAAe,MAA5C,UACI,sBAAKD,UAAU,WAAWE,QAAS,WAAKH,EAAOD,IAA/C,UAAuDD,EAAIM,SAC3D,qBAAKH,UAAWH,EAAII,KAAK,iBAAiB,QAA1C,uBAEA,qBAAKD,UAAU,SAAf,SAAyBH,EAAIO,aCqE1BC,EA1EI,WACf,MAAuBC,mBAAS,CAC5B,CACIC,GAAG,EACHJ,SAAU,aACVC,OAAQ,4DACRH,MAAK,GAET,CACIM,GAAG,EACHJ,SAAU,aACVC,OAAQ,4DACRH,MAAK,GAET,CACIM,GAAG,EACHJ,SAAU,aACVC,OAAQ,4DACRH,MAAK,GAET,CACIM,GAAG,EACHJ,SAAU,aACVC,OAAQ,4DACRH,MAAK,GAET,CACIM,GAAG,EACHJ,SAAU,aACVC,OAAQ,4DACRH,MAAK,GAET,CACIM,GAAG,EACHJ,SAAU,aACVC,OAAQ,4DACRH,MAAK,GAET,CACIM,GAAG,EACHJ,SAAU,aACVC,OAAQ,4DACRH,MAAK,GAET,CACIM,GAAG,EACHJ,SAAU,aACVC,OAAQ,4DACRH,MAAK,KA/Cb,mBAAOO,EAAP,KAAYC,EAAZ,KAmDMC,EAAa,SAACZ,GAChB,IAAIa,EAAcH,EAAKI,KAAI,SAACf,EAAIgB,GAC5B,OAAIA,IAAIf,EACG,2BAAID,GAAX,IAAgBI,MAAMJ,EAAII,OAEnB,2BAAIJ,GAAX,IAAgBI,MAAK,OAI7BQ,EAAQE,IAGZ,OAEI,qBAAKX,UAAU,WAAf,SACKQ,EAAKI,KAAI,SAACf,EAAIC,GAAL,OACV,cAAC,EAAD,CAAKD,IAAKA,EAAKC,IAAKA,EAAKC,OAAQW,GAAiBb,EAAIU,UCtDnDO,MAZf,WACE,OACE,qCACA,qBAAKd,UAAU,SAAf,SACE,8DAEF,cAAC,EAAD,QCCWe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1436434e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Faq = ({faq, idx, toggle}) => {\r\n    return (\r\n        <section className={faq.open?'faq faq-open':'faq'}>\r\n            <div className=\"question\" onClick={()=>{toggle(idx)}}>{faq.question}\r\n            <div className={faq.open?'arrow arrow-up':'arrow'}>&#10094;</div>\r\n            </div>\r\n            <div className=\"answer\">{faq.answer}</div>\r\n        </section>\r\n    )\r\n}\r\nexport default Faq;","import React, {useState} from 'react';\r\nimport Faq from './Faq';\r\n\r\n const Questions = () => {\r\n    const [data,setData] = useState([\r\n        {\r\n            id:0,\r\n            question: 'Question 1',\r\n            answer: \"Lorem ipsum dolor, sit amet consectetur adipisicing elit.\",\r\n            open:true\r\n        },\r\n        {\r\n            id:1,\r\n            question: 'Question 2',\r\n            answer: \"Lorem ipsum dolor, sit amet consectetur adipisicing elit.\",\r\n            open:false\r\n        },\r\n        {\r\n            id:2,\r\n            question: 'Question 3',\r\n            answer: \"Lorem ipsum dolor, sit amet consectetur adipisicing elit.\",\r\n            open:false\r\n        },\r\n        {\r\n            id:3,\r\n            question: 'Question 4',\r\n            answer: \"Lorem ipsum dolor, sit amet consectetur adipisicing elit.\",\r\n            open:false\r\n        },\r\n        {\r\n            id:4,\r\n            question: 'Question 5',\r\n            answer: \"Lorem ipsum dolor, sit amet consectetur adipisicing elit.\",\r\n            open:false\r\n        },\r\n        {\r\n            id:5,\r\n            question: 'Question 6',\r\n            answer: \"Lorem ipsum dolor, sit amet consectetur adipisicing elit.\",\r\n            open:false\r\n        },\r\n        {\r\n            id:6,\r\n            question: 'Question 7',\r\n            answer: \"Lorem ipsum dolor, sit amet consectetur adipisicing elit.\",\r\n            open:false\r\n        },\r\n        {\r\n            id:7,\r\n            question: 'Question 8',\r\n            answer: \"Lorem ipsum dolor, sit amet consectetur adipisicing elit.\",\r\n            open:false\r\n        },\r\n    ])\r\n\r\n    const toggleOpen = (idx) => {\r\n        let updatedFaqs = data.map((faq,i)=>{\r\n            if (i===idx) {\r\n                return {...faq, open:!faq.open};\r\n            } else {\r\n                return {...faq, open:false};\r\n            }\r\n        })\r\n\r\n        setData(updatedFaqs)\r\n    }\r\n\r\n    return (\r\n               \r\n        <div className='faq-list'>\r\n            {data.map((faq,idx)=>(\r\n            <Faq faq={faq} idx={idx} toggle={toggleOpen} key={faq.id}/>))}\r\n        </div>\r\n     \r\n    )\r\n}\r\n\r\nexport default Questions;","\nimport './App.css';\nimport Questions from './questions';\n\n\nfunction App() {\n  return (\n    <>\n    <div className='header'>\n      <h2>Frequently asked questions</h2>\n    </div>\n    <Questions/>\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}